{"version":3,"sources":["Squarecomponent.jsx","Tictactoe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Squarecomponent","props","classes","className","onClick","state","initialstate","Tictactoe","useState","gamestate","updategamestate","isXchance","updateisXchance","useEffect","Winner","checkwinner","alert","lines","i","length","a","b","c","onsquareclicked","index","strings","Array","from","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a0f0fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css';\r\n\r\nconst Squarecomponent = (props)=>{\r\n    const classes = props.className ?`${props.className} square`:`square`;\r\n    return(\r\n        <>\r\n        <span className={classes} onClick={props.onClick}>\r\n         {props.state}\r\n        </span>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Squarecomponent;","import React,{useEffect, useState} from 'react';\r\nimport './index.css';\r\nimport Squarecomponent from './Squarecomponent';\r\n\r\nconst initialstate = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\r\n\r\n\r\n\r\nconst Tictactoe = ()=>{\r\n    const [gamestate,updategamestate] = useState(initialstate);\r\n    const [isXchance,updateisXchance] = useState(false);\r\n\r\n    useEffect(()=>{\r\n         const Winner =  checkwinner();\r\n         if(Winner){\r\n             alert(`congratulation you won the game  ${Winner}`)\r\n\r\n             updategamestate(initialstate)\r\n         }\r\n    },[gamestate]);\r\n\r\n    const checkwinner = ()=>{\r\n            const lines = [\r\n                [0,1,2],\r\n                [3,4,5],\r\n                [6,7,8],\r\n                [0,3,6],\r\n                [1,4,7],\r\n                [2,5,8],\r\n                [0,4,8],\r\n                [2,4,6],\r\n            ];\r\n            for(let i = 0; i<lines.length; i++){\r\n                const [a,b,c] = lines[i];\r\n                if(gamestate[a] && gamestate[a] ===  gamestate[b] && gamestate[a] === gamestate[c]){\r\n                    return gamestate[a];\r\n                } \r\n            }\r\n            return null;\r\n    }\r\n\r\n    const onsquareclicked = (index)=>{\r\n             let strings = Array.from(gamestate);\r\n             strings[index] = isXchance?\"X\":\"O\";\r\n             updategamestate(strings);\r\n             updateisXchance(!isXchance);\r\n\r\n    };\r\n    return(\r\n        <>\r\n        <div className=\"app-header\">\r\n\r\n        <h1 className=\"headingtext\">ðŸ˜ƒ  Tic-tac-toe  ðŸ˜ƒ</h1>\r\n\r\n        <div className=\" row jc-center\">\r\n            <Squarecomponent className=\"b-bottom-right\" state={gamestate[0]} onClick={()=>onsquareclicked(0)}/>\r\n            <Squarecomponent className=\"b-bottom-right\" state={gamestate[1]} onClick={()=>onsquareclicked(1)}/>\r\n            <Squarecomponent className=\"b-bottom\"       state={gamestate[2]} onClick={()=>onsquareclicked(2)}/>\r\n        </div>\r\n\r\n        <div className=\" row jc-center\">\r\n        <Squarecomponent className=\"b-bottom-right\" state={gamestate[3]} onClick={()=>onsquareclicked(3)}/>\r\n        <Squarecomponent className=\"b-bottom-right\" state={gamestate[4]} onClick={()=>onsquareclicked(4)}/>\r\n        <Squarecomponent className=\"b-bottom\"       state={gamestate[5]} onClick={()=>onsquareclicked(5)}/>\r\n        </div>\r\n\r\n        <div className=\" row jc-center\">\r\n        <Squarecomponent className=\"b-right\" state={gamestate[6]} onClick={()=>onsquareclicked(6)}/>\r\n        <Squarecomponent className=\"b-right\" state={gamestate[7]} onClick={()=>onsquareclicked(7)}/>\r\n        <Squarecomponent                     state={gamestate[8]} onClick={()=>onsquareclicked(8)}/>\r\n        </div>\r\n\r\n        <button className=\"clear-button\" onClick={()=> updategamestate(initialstate)}>Start New Game </button>\r\n\r\n        \r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tictactoe;","import './App.css';\nimport Tictactoe from './Tictactoe';\n\nfunction App() {\n  return (\n    <>\n    <Tictactoe/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}